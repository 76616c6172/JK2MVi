language: cpp
sudo: required
dist: trusty

env:
  global:
    - "FTP_SERVER=ftp://jk2mv.org"
    - "FTP_USER=ounedcideploy"
    - secure: "XZBwOWePycNX1Ce4/e8ZKveZYwoWjZYYdYLCN5yk3hDTRvMKTI1n2xBWbsyNjZ35Ep3MYyq9KKA7YqQ9whvV7k3IcK66jUfViWaqvKuu3gm7+pdpyEWHbx5m8uQGqL4irlB2Zo1eNw9QMPwRpaM2hQDCDV8AIzBR4axPIralCOE="

matrix:
  include:
    - os: linux
      env: HOST=linux-i386-gcc
    - os: linux
      env: HOST=linux-x86_64-gcc
    - os: osx
      env: HOST=macosx-universal-clang

before_install:
  - git fetch --unshallow
  - if [[ "$HOST" == linux-i386-gcc ]]; then sudo dpkg --add-architecture i386; fi
  - if [[ "$HOST" == linux-*-gcc ]]; then sudo apt-get update; fi

install: |
  export MVDIR=`pwd`

  if [[ "$HOST" == linux-*-gcc ]]; then
      sudo apt-get install -y cmake curl rpm debhelper devscripts
  fi

  if [[ "$HOST" == linux-x86_64-gcc ]]; then
      sudo apt-get install -y libsdl2-dev libopenal-dev
  elif [[ "$HOST" == linux-i386-gcc ]]; then
      sudo apt-get install -y gcc-multilib gcc-4.8-multilib g++-multilib g++-4.8-multilib libsdl2-dev:i386 libopenal-dev:i386
  else
      cd ~
      curl -O https://www.libsdl.org/release/SDL2-2.0.3.tar.gz
      tar xzf SDL2-2.0.3.tar.gz
      cd SDL2-2.0.3/Xcode/SDL
      sed -i -e 's/@rpath//g' SDL.xcodeproj/project.pbxproj
      xcodebuild -configuration Release
      mkdir -p ~/Library/Frameworks/
      ln -s `pwd`/build/Release/SDL2.framework ~/Library/Frameworks/
  fi

script:
  - cd "$MVDIR/build"
  - mkdir travis_build
  - cd travis_build

  - if [[ "$HOST" == linux-i386-gcc ]];   then export CC="$CC -m32"; export CXX="$CXX -m32"; fi
  - if [[ "$HOST" == linux-i386-gcc ]];   then cmake -G "Unix Makefiles" -DCMAKE_SYSTEM_PROCESSOR="i386" -DCMAKE_SYSTEM_NAME="Linux" -DUseInternalPNG=ON -DUseInternalJPEG=ON -DUseInternalZLIB=ON -DUseInternalCURL=ON -DBuildPackDEB=ON -DBuildPackRPM=ON ../..; fi
  - if [[ "$HOST" == linux-x86_64-gcc ]]; then cmake -G "Unix Makefiles" -DUseInternalPNG=ON -DUseInternalJPEG=ON -DUseInternalZLIB=ON -DUseInternalCURL=ON -DBuildPackDEB=ON -DBuildPackRPM=ON ../..; fi

  - if [[ "$HOST" == macosx-universal-clang ]]; then cmake -G "Unix Makefiles" -DUseInternalPNG=ON -DUseInternalJPEG=ON -DUseInternalZLIB=ON -DUseInternalCURL=ON ../..; fi

  - make
  - make package

after_success: |
  if [[ "${TRAVIS_PULL_REQUEST}" = "false" ]]; then
      cd "$MVDIR/build/travis_build/out"

      for i in *.{deb,rpm,dmg}; do
          curl -T ${i} -u $FTP_USER:$FTP_PASSWORD $FTP_SERVER
      done
  fi
